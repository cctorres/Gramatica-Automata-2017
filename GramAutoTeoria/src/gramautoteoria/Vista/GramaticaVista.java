/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gramautoteoria.Vista;

import gramautoteoria.Modelo.Automata;
import gramautoteoria.Modelo.Gramatica;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author PC
 */
public class GramaticaVista extends javax.swing.JFrame {
    
    
    private Gramatica gramatica = new Gramatica();
    private JFileChooser seleccionar = new JFileChooser();
    private File archivo;
    private FileInputStream entrada;
    private FileOutputStream salida;

    /**
     * Creates new form Principal
     */
    public GramaticaVista() {
        initComponents();
    }
    
    public String abrirArchivo(File Archivo) {
        String documento = "";
        try {
            entrada = new FileInputStream(archivo);
            int ascci;
            while ((ascci = entrada.read()) != -1) {
                char caracter = (char) ascci;
                documento += caracter;
            }
        } catch (Exception e) {

        }

        return documento;

    }
    
    public String guardarArchivo(File archivo, String documento){
        String mensaje = null;
        try{
            salida = new FileOutputStream(archivo);
            byte [] bytxt = documento.getBytes();
            salida.write(bytxt);
            mensaje = "Archivo guardado";
        } catch (Exception e){
            
        } return mensaje;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        guardarBoton = new javax.swing.JButton();
        leerBoton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        derechoTexto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        izquierdoTexto = new javax.swing.JTextField();
        ingresarBotón = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        esSimplificableBoton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        NTTexto = new javax.swing.JTextPane();
        conjuntosBoton = new javax.swing.JButton();
        simplificarBoton = new javax.swing.JButton();
        regularBoton = new javax.swing.JButton();
        editarBoton = new javax.swing.JButton();
        eliminarBoton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        posicionTexto = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        cambioTexto = new javax.swing.JTextPane();
        izquierdaCheck = new javax.swing.JCheckBox();
        derechaCheck = new javax.swing.JCheckBox();
        automataBoton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        guardarBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra2.png"))); // NOI18N
        guardarBoton.setText("Guardar ");
        guardarBoton.setBorderPainted(false);
        guardarBoton.setContentAreaFilled(false);
        guardarBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardarBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        guardarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBotonActionPerformed(evt);
            }
        });
        getContentPane().add(guardarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 90, 100, 60));

        leerBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra2.png"))); // NOI18N
        leerBoton.setText("Leer ");
        leerBoton.setBorderPainted(false);
        leerBoton.setContentAreaFilled(false);
        leerBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        leerBoton.setFocusPainted(false);
        leerBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        leerBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leerBotonActionPerformed(evt);
            }
        });
        getContentPane().add(leerBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 90, 80, 60));

        jLabel1.setText("Lado derecho");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, -1, -1));
        getContentPane().add(derechoTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 291, -1));

        jLabel2.setText("Lado izquierdo");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));
        getContentPane().add(izquierdoTexto, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 144, -1));

        ingresarBotón.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra.png"))); // NOI18N
        ingresarBotón.setText("Ingresar producción");
        ingresarBotón.setAlignmentY(0.0F);
        ingresarBotón.setBorderPainted(false);
        ingresarBotón.setContentAreaFilled(false);
        ingresarBotón.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ingresarBotón.setDisplayedMnemonicIndex(0);
        ingresarBotón.setFocusPainted(false);
        ingresarBotón.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ingresarBotón.setIconTextGap(0);
        ingresarBotón.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresarBotónActionPerformed(evt);
            }
        });
        getContentPane().add(ingresarBotón, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 150, 40));

        jScrollPane1.setViewportView(gramaticaTexto);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 139, 770, 200));

        esSimplificableBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra.png"))); // NOI18N
        esSimplificableBoton.setText("¿Es simplificable?");
        esSimplificableBoton.setBorderPainted(false);
        esSimplificableBoton.setContentAreaFilled(false);
        esSimplificableBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        esSimplificableBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        esSimplificableBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esSimplificableBotonActionPerformed(evt);
            }
        });
        getContentPane().add(esSimplificableBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        jScrollPane2.setViewportView(NTTexto);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 399, 770, 110));

        conjuntosBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra2.png"))); // NOI18N
        conjuntosBoton.setText("Conjuntos");
        conjuntosBoton.setBorderPainted(false);
        conjuntosBoton.setContentAreaFilled(false);
        conjuntosBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        conjuntosBoton.setDefaultCapable(false);
        conjuntosBoton.setFocusPainted(false);
        conjuntosBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        conjuntosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conjuntosBotonActionPerformed(evt);
            }
        });
        getContentPane().add(conjuntosBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, -1, -1));

        simplificarBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra2.png"))); // NOI18N
        simplificarBoton.setText("Simplificar");
        simplificarBoton.setBorderPainted(false);
        simplificarBoton.setContentAreaFilled(false);
        simplificarBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        simplificarBoton.setFocusPainted(false);
        simplificarBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        simplificarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simplificarBotonActionPerformed(evt);
            }
        });
        getContentPane().add(simplificarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, -1, -1));

        regularBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra2.png"))); // NOI18N
        regularBoton.setText("Es regular?");
        regularBoton.setBorderPainted(false);
        regularBoton.setContentAreaFilled(false);
        regularBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        regularBoton.setFocusPainted(false);
        regularBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        regularBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regularBotonActionPerformed(evt);
            }
        });
        getContentPane().add(regularBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 340, -1, -1));

        editarBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra2.png"))); // NOI18N
        editarBoton.setText("Editar");
        editarBoton.setBorderPainted(false);
        editarBoton.setContentAreaFilled(false);
        editarBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editarBoton.setFocusPainted(false);
        editarBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarBotonActionPerformed(evt);
            }
        });
        getContentPane().add(editarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 520, -1, 60));

        eliminarBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra2.png"))); // NOI18N
        eliminarBoton.setText("Eliminar");
        eliminarBoton.setBorderPainted(false);
        eliminarBoton.setContentAreaFilled(false);
        eliminarBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eliminarBoton.setFocusPainted(false);
        eliminarBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBotonActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 510, -1, 80));

        posicionTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                posicionTextoKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(posicionTexto);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 540, 50, -1));

        jScrollPane4.setViewportView(cambioTexto);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 540, 380, -1));

        izquierdaCheck.setText("Izquierda");
        izquierdaCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izquierdaCheckActionPerformed(evt);
            }
        });
        getContentPane().add(izquierdaCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 533, -1, 30));

        derechaCheck.setText("Derecha");
        derechaCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derechaCheckActionPerformed(evt);
            }
        });
        getContentPane().add(derechaCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 533, -1, 30));

        automataBoton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/FondoBtnSombra2.png"))); // NOI18N
        automataBoton.setText("Autómata");
        automataBoton.setBorderPainted(false);
        automataBoton.setContentAreaFilled(false);
        automataBoton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        automataBoton.setFocusPainted(false);
        automataBoton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        automataBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automataBotonActionPerformed(evt);
            }
        });
        getContentPane().add(automataBoton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 340, 91, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Posición:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nuevo texto:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 520, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("X");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setDefaultCapable(false);
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 50, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/Título1.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, -1, 90));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/Título2.png"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, -1, 80));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gramautoteoria/Img/Fondo.png"))); // NOI18N
        jLabel6.setFocusable(false);
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leerBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leerBotonActionPerformed
        if(seleccionar.showDialog(null, "Abrir")==JFileChooser.APPROVE_OPTION){
            archivo = seleccionar.getSelectedFile();
            if(archivo.canRead()){
                if(archivo.getName().endsWith("txt")){
                    String documento = this.abrirArchivo(archivo);
                    gramaticaTexto.setText(documento);
                    this.gramatica.reiniciarGramatica();
                    this.gramatica.generarGramaticaFichero(documento);
                    this.gramatica.quitarEspacios();
                    gramaticaTexto.setText(this.gramatica.imprimirGramatica());
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "No se ha seleccionado un archivo txt");
                }
            }
        }
    }//GEN-LAST:event_leerBotonActionPerformed

    private void guardarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBotonActionPerformed
        if (seleccionar.showDialog(null, "Guardar") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();            
            if (archivo.getName().endsWith("txt")) {
                String Documento = gramaticaTexto.getText();
                String mensaje = this.guardarArchivo(archivo, Documento);
                if (mensaje != null) {
                    JOptionPane.showMessageDialog(null, mensaje);
                } else {
                    JOptionPane.showMessageDialog(null, "No se ha selecciona un archivo txt");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Archivo debe terminar con .txt");
            }        
            gramaticaTexto.setText(gramatica.imprimirGramatica());

        }
    }//GEN-LAST:event_guardarBotonActionPerformed

    private void ingresarBotónActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresarBotónActionPerformed
        String izquierdo = izquierdoTexto.getText();
        izquierdo = izquierdo.replace(" ", "");
        String derecho = derechoTexto.getText();
        derecho = derecho.replace(" ", "");
        if(izquierdo.equals("")){
            JOptionPane.showMessageDialog(null, "Por favor, rellenar el campo de izquierdo");
            return;
        }
        if(!izquierdo.substring(0,1).equals("<") | !izquierdo.substring(izquierdo.length()-1).equals(">")){
            JOptionPane.showMessageDialog(null, "El lado izquierdo debe ser de la forma <nombre>");
            return;
        }
        gramatica.agregarProduccion(izquierdo, derecho);
        gramaticaTexto.setText(gramatica.imprimirGramatica());
    }//GEN-LAST:event_ingresarBotónActionPerformed

    private void simplificarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simplificarBotonActionPerformed
        if(gramaticaTexto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se ha ingresado una gramática a evaluar");
            return;
        }
        if(!gramatica.esSimplificable()){
            NTTexto.setText("La gramática no es simplificable");
            return;
        }
        Gramatica aux = gramatica.simplificar();
        this.gramatica = aux;
        gramaticaTexto.setText(gramatica.imprimirGramatica());
    }//GEN-LAST:event_simplificarBotonActionPerformed

    private void regularBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regularBotonActionPerformed
        if(gramaticaTexto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se ha ingresado una gramática a evaluar");
            return;
        }
        if(gramatica.esRegular()){
            NTTexto.setText("La gramática es regular");
        }
        else{
            NTTexto.setText("La gramática no es regular");
        }
    }//GEN-LAST:event_regularBotonActionPerformed

    private void automataBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automataBotonActionPerformed
        if(gramaticaTexto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se ha ingresado una gramática a evaluar");
            return;
        }
        if(!gramatica.esRegular()){
            JOptionPane.showMessageDialog(null, "No es posible convertir la gramática a un AF");
            return;
        }
        AutomataVista grafica = new AutomataVista();
        grafica.setLocationRelativeTo(null);
        grafica.setVisible(true);
    }//GEN-LAST:event_automataBotonActionPerformed

    private void conjuntosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conjuntosBotonActionPerformed
        if(gramaticaTexto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se ha ingresado un automata a evaluar");
            return;
        }
        ArrayList<String> NTVivos = gramatica.noTerminalesVivos();
        ArrayList<String> NTMuertos = gramatica.noTerminalesMuertos();
        ArrayList<String> NTInalcanzables = gramatica.noTerminalesInalcanzables();
        ArrayList<String> NTAlcanzables = gramatica.noTerminalesAlcanzables();
        
        String texto = "NTVivos: \n"+
                        NTVivos.toString()+"\n"+
                        "NTMuertos: \n"+
                        NTMuertos.toString()+"\n"+
                        "NTInalcanzables: \n"+
                        NTInalcanzables.toString()+"\n"+
                        "NTAlcanzables: \n"+
                        NTAlcanzables.toString()+"\n";
        
        NTTexto.setText(texto);
    }//GEN-LAST:event_conjuntosBotonActionPerformed

    private void derechaCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derechaCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_derechaCheckActionPerformed

    private void esSimplificableBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esSimplificableBotonActionPerformed
        if(gramaticaTexto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se ha ingresado una gramática a evaluar");
            return;
        }
        if(gramatica.esSimplificable()){
            NTTexto.setText("La gramática es simplificable");
        }
        else{
            NTTexto.setText("La gramática no es simplificable");
        }
    }//GEN-LAST:event_esSimplificableBotonActionPerformed

    private void izquierdaCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izquierdaCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_izquierdaCheckActionPerformed

    private void eliminarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBotonActionPerformed
        if(gramaticaTexto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "No se ha ingresado una gramática a evaluar");
            return;
        }
        if(posicionTexto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor, ingresar la posición de la producción que desea eliminar");
            return;
        }
        if(Integer.parseInt(posicionTexto.getText())<0 | Integer.parseInt(posicionTexto.getText())>gramatica.getProducciones().size()){
            JOptionPane.showMessageDialog(null, "Por favor, ingresar una posición válida");
            return;
        }
        gramatica.eliminarProduccion(Integer.parseInt(posicionTexto.getText()));
        gramaticaTexto.setText(gramatica.imprimirGramatica());
    }//GEN-LAST:event_eliminarBotonActionPerformed

    private void editarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarBotonActionPerformed
        if (gramaticaTexto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "No se ha ingresado una gramática a evaluar");
            return;
        }
        if (posicionTexto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresar la posición de la producción que desea editar");
            return;
        }
        if(Integer.parseInt(posicionTexto.getText())<0 | Integer.parseInt(posicionTexto.getText())>gramatica.getProducciones().size()){
            JOptionPane.showMessageDialog(null, "Por favor, ingresar una posición válida");
            return;
        }
        if ((izquierdaCheck.isSelected() & derechaCheck.isSelected()) | (!izquierdaCheck.isSelected() & !derechaCheck.isSelected())) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccionar que lado de la producción desea editar");
            return;
        }
        if (izquierdaCheck.isSelected()) {
            if (cambioTexto.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Por favor, ingresar un NT de la fomra <NT>");
                return;
            }
            if(!cambioTexto.getText().substring(0, 1).equals("<") | !cambioTexto.getText().substring(cambioTexto.getText().length() - 1).equals(">")){
                JOptionPane.showMessageDialog(null, "Por favor, ingresar un NT de la fomra <NT>");
                return;
            }
        gramatica.modificarGramatica(Integer.parseInt(posicionTexto.getText()), "izquierdo", cambioTexto.getText());
        } else {
            gramatica.modificarGramatica(Integer.parseInt(posicionTexto.getText()), "derecho", cambioTexto.getText());
        }
        gramaticaTexto.setText(gramatica.imprimirGramatica());
    }//GEN-LAST:event_editarBotonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void posicionTextoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_posicionTextoKeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c)){
            if((c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)){
                return;
            }
            evt.consume();
            JOptionPane.showMessageDialog(null, "El campo sólo pude contener números enteros");
            
        }
    }//GEN-LAST:event_posicionTextoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GramaticaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GramaticaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GramaticaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GramaticaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GramaticaVista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane NTTexto;
    private javax.swing.JButton automataBoton;
    private javax.swing.JTextPane cambioTexto;
    private javax.swing.JButton conjuntosBoton;
    private javax.swing.JCheckBox derechaCheck;
    private javax.swing.JTextField derechoTexto;
    private javax.swing.JButton editarBoton;
    private javax.swing.JButton eliminarBoton;
    private javax.swing.JButton esSimplificableBoton;
    public static final javax.swing.JTextPane gramaticaTexto = new javax.swing.JTextPane();
    private javax.swing.JButton guardarBoton;
    private javax.swing.JButton ingresarBotón;
    private javax.swing.JCheckBox izquierdaCheck;
    private javax.swing.JTextField izquierdoTexto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton leerBoton;
    private javax.swing.JTextPane posicionTexto;
    private javax.swing.JButton regularBoton;
    private javax.swing.JButton simplificarBoton;
    // End of variables declaration//GEN-END:variables
}
